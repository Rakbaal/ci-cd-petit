name: dockerize
run-name: ${{github.actor}} is building the container
on: [push]

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: checkout 
          uses: actions/checkout@v3
        - name: setup
          run: |
            npm install next@latest react@latest react-dom@latest 
            npm i
        - name: building
          run: npm run build
        - name: caching
          uses: actions/cache@v3
          with:
              path: |
                node_modules
                /home/runner/.cache/Cypress
              key: dependencies
    test:
      runs-on: ubuntu-latest
      needs: build
      steps : 
          - name: checkout
            uses: actions/checkout@v3
          - name: retrieves cached node_modules
            uses: actions/cache@v3
            with:
              path: |
                  node_modules
                  /home/runner/.cache/Cypress
              key: dependencies
          - name: running cypress tests
            run: npm run e2e:headless
          - name: saving video as artifact
            if: ${{always()}}
            uses: actions/upload-artifact@v3
            with:
              name: video
              path: cypress/videos/app.cy.ts.mp4
    deploy-dev:
        runs-on: ubuntu-latest
        needs: test
        permissions:
            contents: read
            packages: write
        environment: dev
        steps:
            - name: login to docker registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{github.actor}}
                password: ${{secrets.GITHUB_TOKEN}}
                logout: false
            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                push: true
                tags: ghcr.io/rakbaal/cicd:${{vars.IMAGE_TAG}}

    deploy-prod:
      runs-on: ubuntu-latest
      needs: test
      permissions:
          contents: read
          packages: write
      environment: prod
      steps:
          - name: login to docker registry
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: ${{github.actor}}
              password: ${{secrets.GITHUB_TOKEN}}
              logout: false
          - name: Build and push
            uses: docker/build-push-action@v4
            with:
              push: true
              tags: ghcr.io/rakbaal/cicd:${{vars.IMAGE_TAG}}
    # deploy-image:
    #     runs-on: ubuntu-latest
    #     needs: build-push
    #     steps:
    #         - name: save private key
    #           uses: webfactory/ssh-agent@v0.8.0
    #           with:
    #             ssh-private-key: ${{secrets.SSH_KEY}}
    #         - name: ssh connection
    #           run: ssh -o StrictHostKeyChecking=no ${{secrets.SSH_USER}}@${{secrets.DNS_ADDRESS}} "sudo docker-compose -f docker-compose.prod.yml up -d --pull always"  

            